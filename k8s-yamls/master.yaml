# ClusterRole and ClusterRole binding for spark-main (services)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: service-role
rules:
- apiGroups: [""]
  #
  # at the HTTP level, the name of the resource for accessing Secret
  # objects is "secrets"
  resources: ["services"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: use-resources
subjects:
- kind: ServiceAccount
  # Reference to upper's `metadata.name`
  name: default
  # Reference to upper's `metadata.namespace`
  namespace: default
roleRef:
  kind: ClusterRole
  name: service-role
  apiGroup: rbac.authorization.k8s.io
---
# ClusterRole and ClusterRole binding for spark-main (deployments)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: deployment-role
rules:
- apiGroups: ["apps"]
  #
  # at the HTTP level, the name of the resource for accessing Secret
  # objects is "secrets"
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: use-deployments
subjects:
- kind: ServiceAccount
  # Reference to upper's `metadata.name`
  name: default
  # Reference to upper's `metadata.namespace`
  namespace: default
roleRef:
  kind: ClusterRole
  name: deployment-role
  apiGroup: rbac.authorization.k8s.io
---
# ConfigMap for start_cluster.sh
# ./spark-3.3.0-bin-hadoop3/sbin/start-master.sh
apiVersion: v1
kind: ConfigMap
metadata:
  name: start-cluster
data:
  start-cluster.sh: |
    #!/bin/bash
    ./spark-3.3.0-bin-hadoop3/sbin/start-master.sh
    helm install spark-notebook-chart /opt/spark-notebook-chart
---
### Definition for spark jupyter worker ###
apiVersion: v1
kind: Pod
metadata:
  name: spark-jupyter
  labels:
    app: spark-jupyter
spec:
  containers:
  - name: spark-jupyter
    image: ghcr.io/ucsd-ets/spark-notebook:latest
    imagePullPolicy: Always
    command: ["/bin/bash","-c"]
    args: ["jupyter notebook --ip 0.0.0.0 --port 8888 --allow-root --NotebookApp.token=''"]
    ports:
    - containerPort: 7077
    - containerPort: 8082
    - containerPort: 30007
    - containerPort: 40007
    - containerPort: 50007
    - containerPort: 60007
    - containerPort: 60008
    - containerPort: 60009
    volumeMounts:
      - mountPath: /opt/start-cluster.sh
        subPath: start-cluster.sh
        name: config-volume
      - mountPath: /datasets/ds102-wi22-a00-public
        name: datasets
  volumes:
    - name: config-volume
      configMap:
        name: start-cluster
        defaultMode: 0777
    - name: datasets
      nfs:
        server: its-dsmlp-fs01.ucsd.edu
        path: /export/datasets/ds102-wi22-a00-public/compilation/dataset_public
---
# ClusterRole and ClusterRole binding for spark-jupyter (services)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: secret-role
rules:
- apiGroups: [""]
  #
  # at the HTTP level, the name of the resource for accessing Secret
  # objects is "secrets"
  resources: ["secrets", "serviceaccounts"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: use-secrets
subjects:
- kind: ServiceAccount
  # Reference to upper's `metadata.name`
  name: default
  # Reference to upper's `metadata.namespace`
  namespace: default
roleRef:
  kind: ClusterRole
  name: secret-role
  apiGroup: rbac.authorization.k8s.io